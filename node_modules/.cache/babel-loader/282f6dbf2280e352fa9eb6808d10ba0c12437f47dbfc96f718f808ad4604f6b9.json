{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dmack\\\\OneDrive\\\\Documents\\\\React\\\\react-forms\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotEmpty = value => value.trim() !== '';\nconst isEmail = value => value.includes('@');\nconst BasicForm = () => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: nameFieldReset\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredPhone,\n    isValid: phoneIsValid,\n    hasError: phoneHasError,\n    valueChangeHandler: phoneChangeHandler,\n    inputBlurHandler: phoneBlurHandler,\n    reset: phoneFieldReset\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailFieldReset\n  } = useInput(isEmail);\n  let formIsValid = false;\n  if (nameIsValid && phoneIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const submitHandler = event => {\n    event.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    nameFieldReset();\n    phoneFieldReset();\n    emailFieldReset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredName,\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Name cannot be blank.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"phone\",\n          value: enteredPhone,\n          onChange: phoneChangeHandler,\n          onBlur: phoneBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), phoneHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Phone cannot be blank.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredEmail,\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"8c0KsGiSiH/5zsmK9SqUsF/KUX8=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","isNotEmpty","value","trim","isEmail","includes","BasicForm","_s","enteredName","isValid","nameIsValid","hasError","nameHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","nameFieldReset","enteredPhone","phoneIsValid","phoneHasError","phoneChangeHandler","phoneBlurHandler","phoneFieldReset","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","emailFieldReset","formIsValid","submitHandler","event","preventDefault","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/dmack/OneDrive/Documents/React/react-forms/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\"\n\nconst isNotEmpty = value => value.trim() !== '';\nconst isEmail = value => value.includes('@')\n\nconst BasicForm = () => {\n\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: nameFieldReset,\n  } = useInput(isNotEmpty)\n\n  const {\n    value: enteredPhone,\n    isValid: phoneIsValid,\n    hasError: phoneHasError,\n    valueChangeHandler: phoneChangeHandler,\n    inputBlurHandler: phoneBlurHandler,\n    reset: phoneFieldReset,\n  } = useInput(isNotEmpty)\n\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: emailFieldReset,\n  } = useInput(isEmail)\n\n  let formIsValid = false\n\n  if (nameIsValid && phoneIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n\n    if (!formIsValid) {\n      return;\n    }\n\n    nameFieldReset()\n    phoneFieldReset()\n    emailFieldReset()\n\n  }\n\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className='form-control'>\n          <label htmlFor='name'>Name</label>\n          <input \n          type='text' id='name'\n          value={enteredName}\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n           />\n          {nameHasError && <p>Name cannot be blank.</p>}\n        </div>\n        <div className='form-control'>\n          <label htmlFor='phone'>Phone</label>\n          <input \n          type='text' id='phone' \n          value={enteredPhone}\n          onChange={phoneChangeHandler}\n          onBlur={phoneBlurHandler}\n          />\n          {phoneHasError && <p>Phone cannot be blank.</p>}\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input \n        type='text' id='name'\n        value={enteredEmail}\n        onChange={emailChangeHandler}\n        onBlur={emailBlurHandler}\n        />\n        {emailHasError && <p>Please enter a valid email.</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}