{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  return inputStateReducer;\n};\nconst useInput = validateValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n\n  //const [enteredValue, setEnteredValue] = useState('') -> using state\n  //const [isTouched, setIsTouched] = useState(false) -> using state\n\n  const valueIsValid = validateValue(inputState.value);\n  //const valueIsValid = validateValue(enteredValue) -> using state\n  const hasError = !valueIsValid && inputState.isTouched || !enteredValue && inputState.isTouched;\n  //const hasError = (!valueIsValid && isTouched) || (!enteredValue && isTouched); -> using state\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\nexport default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","_s","inputState","dispatch","valueIsValid","hasError","enteredValue","valueChangeHandler","event","type","target","setEnteredValue","inputBlurHandler","setIsTouched","reset","isValid"],"sources":["C:/Users/dmack/OneDrive/Documents/React/react-forms/src/hooks/use-input.js"],"sourcesContent":["import { useReducer } from \"react\"\r\n\r\n\r\nconst initialInputState = {\r\n  value: '',\r\n  isTouched: false\r\n}\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  return inputStateReducer\r\n}\r\n\r\nconst useInput = (validateValue) => {\r\n\r\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState)\r\n\r\n  //const [enteredValue, setEnteredValue] = useState('') -> using state\r\n  //const [isTouched, setIsTouched] = useState(false) -> using state\r\n\r\n\r\n  const valueIsValid = validateValue(inputState.value)\r\n  //const valueIsValid = validateValue(enteredValue) -> using state\r\n  const hasError = (!valueIsValid && inputState.isTouched) || (!enteredValue && inputState.isTouched);\r\n  //const hasError = (!valueIsValid && isTouched) || (!enteredValue && isTouched); -> using state\r\n\r\n  const valueChangeHandler = event => {\r\n    dispatch({type: 'INPUT', value: event.target.value})\r\n    setEnteredValue(event.target.value)\r\n  }\r\n\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n  }\r\n\r\n  const reset = () => {\r\n    setEnteredValue('')\r\n    setIsTouched(false)\r\n  }\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useInput"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAGlC,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3C,OAAOF,iBAAiB;AAC1B,CAAC;AAED,MAAMG,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAElC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACI,iBAAiB,EAAEH,iBAAiB,CAAC;;EAE/E;EACA;;EAGA,MAAMW,YAAY,GAAGJ,aAAa,CAACE,UAAU,CAACR,KAAK,CAAC;EACpD;EACA,MAAMW,QAAQ,GAAI,CAACD,YAAY,IAAIF,UAAU,CAACP,SAAS,IAAM,CAACW,YAAY,IAAIJ,UAAU,CAACP,SAAU;EACnG;;EAEA,MAAMY,kBAAkB,GAAGC,KAAK,IAAI;IAClCL,QAAQ,CAAC;MAACM,IAAI,EAAE,OAAO;MAAEf,KAAK,EAAEc,KAAK,CAACE,MAAM,CAAChB;IAAK,CAAC,CAAC;IACpDiB,eAAe,CAACH,KAAK,CAACE,MAAM,CAAChB,KAAK,CAAC;EACrC,CAAC;EAED,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BC,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBH,eAAe,CAAC,EAAE,CAAC;IACnBE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IACLnB,KAAK,EAAEY,YAAY;IACnBS,OAAO,EAAEX,YAAY;IACrBC,QAAQ;IACRE,kBAAkB;IAClBK,gBAAgB;IAChBE;EACF,CAAC;AACH,CAAC;AAAAb,EAAA,CAnCKF,QAAQ;AAqCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}