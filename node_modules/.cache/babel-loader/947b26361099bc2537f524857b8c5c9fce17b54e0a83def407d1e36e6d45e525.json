{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dmack\\\\OneDrive\\\\Documents\\\\React\\\\react-forms\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n  if (enteredNameIsValid || enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return; //returns from the function so the rest of the function wont be executed\n    }\n\n    resetNameInput();\n    resetEmailInput();\n  };\n  const nameInputClasses = nameInputHasError || emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangedHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"6f5ibrXsPHKibH3ffi4Zk0O8bek=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/dmack/OneDrive/Documents/React/react-forms/src/components/SimpleInput.js"],"sourcesContent":["import useInput from \"../hooks/use-input\"\n\nconst SimpleInput = (props) => {\n\n  const { \n    value: enteredName, \n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError, \n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput(value => value.trim() !== '');\n\n\n  const { \n    value: enteredEmail, \n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError, \n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(value => value.includes('@'));\n\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid || enteredEmailIsValid) {\n    formIsValid = true\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault()\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return; //returns from the function so the rest of the function wont be executed\n    }\n\n    resetNameInput()\n    resetEmailInput()\n  }\n\n  const nameInputClasses = nameInputHasError || emailInputHasError\n    ? 'form-control invalid' \n    : 'form-control'\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        type='text' id='name' \n        onChange={nameChangedHandler} \n        onBlur={nameBlurHandler}\n        value={enteredName}/>\n        {nameInputHasError && <p className=\"error-text\">Name must not be empty.</p>}\n        <label htmlFor='email'>Your Email</label>\n        <input \n        type='email' id='email' \n        onChange={emailChangedHandler} \n        onBlur={emailBlurHandler}\n        value={enteredEmail}/>\n        {emailInputHasError && <p className=\"error-text\">Email must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}